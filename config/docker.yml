# Docker-specific configuration for Cerverus
# This file contains Docker-related settings and environment configurations

version: '1.0'

# Docker Compose Configuration
docker_compose:
  version: '3.8'
  networks:
    cerverus-network:
      driver: bridge

# Service Configurations
services:
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: cerverus
      POSTGRES_USER: cerverus_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-cerverus_pass}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cerverus_user -d cerverus"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  cerverus-api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://cerverus_user:${POSTGRES_PASSWORD:-cerverus_pass}@postgres:5432/cerverus
      - REDIS_URL=redis://redis:6379/0
      - ENV=development
    volumes:
      - ./src:/app/src:ro
      - ./config:/app/config:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  airflow-webserver:
    build:
      context: .
      dockerfile: docker/airflow/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://cerverus_user:${POSTGRES_PASSWORD:-cerverus_pass}@postgres:5432/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://cerverus_user:${POSTGRES_PASSWORD:-cerverus_pass}@postgres:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# Volume Configuration
volumes:
  postgres_data:
    driver: local

# Build Configuration
build:
  args:
    BUILDKIT_INLINE_CACHE: 1
  cache_from:
    - cerverus-api:latest
    - cerverus-airflow:latest

# Resource Limits
resources:
  limits:
    memory: 4GB
    cpus: '2.0'
  reservations:
    memory: 2GB
    cpus: '1.0'