# Docker Compose for Cerverus - modern format (no `version:` key)
services:
  # API service: builds the app image and exposes Uvicorn
  api:
    build: .
    # Map port 8000 on the host to 8000 in the container
    ports:
      - "8000:8000"
    # Development-friendly mounts:
    # - mount local api source into container so code changes are reflected immediately
    # - optionally mount a local .venv to reuse the host venv (NOT recommended for CI/production)
    volumes:
      - ./api:/app/api
    # - ./.venv:/app/.venv   # OPTIONAL: mount host venv into container (use only for local dev)
    environment:
      - DATABASE_URL=postgresql://postgres:example@db:5432/cerverus
      - ENVIRONMENT=development
    depends_on:
      - db
  # If you want compose to wait for DB readiness, add a startup script or healthcheck logic.

  # Postgres service: simple local development DB
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: cerverus
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Basic healthcheck to signal readiness to Compose (optional but useful)
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cerverus"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  # Persistent volume for Postgres data
  postgres_data: