# Docker Compose for Cerverus - modern format (no `version:` key)
services:
  # API service: builds the app image and exposes Uvicorn
  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    image: cerverus-v3:latest  
    container_name: cerverus-api-v3  
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app/api
      - ./src:/app/src
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - ENVIRONMENT=${ENVIRONMENT}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cerverus-network

  # PostgreSQL database for development
  db:
    image: postgres:15
    container_name: cerverus-postgres-v3 
    user: "999:999"  # postgres user UID:GID
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
      PGUSER: ${POSTGRES_USER}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - cerverus-network

volumes:
  postgres_data:
    driver: local

networks:
  cerverus-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1