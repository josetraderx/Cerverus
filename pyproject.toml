[tool.poetry]
name = "cerverus"
version = "0.1.0"
description = "Financial Anomaly Detection System"
authors = ["Your Name <your@email.com>"]
readme = "README.md"
packages = [{ include = "cerverus", from = "src" }]

[tool.poetry.dependencies]
python = "^3.11"
# Core Framework
fastapi = ">=0.109.1"
uvicorn = { extras = ["standard"], version = "^0.24.0" }
pydantic = "^2.5.0"
python-dotenv = "^1.0.0"
# Data Processing
pandas = "^2.1.3"
numpy = "^1.25.2"
scikit-learn = "^1.3.2"
yfinance = "^0.2.21"
requests = "^2.31.0"
# Database
psycopg2-binary = "^2.9.9"
sqlalchemy = "^2.0.23"
# Utilities
python-multipart = ">=0.0.18"
setuptools = ">=78.1.1"
starlette = ">=0.40.0"

[tool.poetry.group.dev.dependencies]
# Testing & Quality
pytest = "^7.4.3"
httpx = "^0.25.2"
black = "^23.11.0"
pylint = "^3.0.2"
isort = "^5.12.0"
# Notebooks
jupyter = "^1.0.0"
notebook = "^7.0.6"
ipykernel = "^6.26.0"
# DevOps
docker = "^6.1.0"
kubernetes = "^28.1.0"
# Resiliency & Messaging
circuitbreaker = "^1.4.0"
aio-pika = "^9.3.0"
redis = "^5.0.1"
# Observability
prometheus-client = "^0.19.0"
opentelemetry-api = "^1.21.0"
opentelemetry-sdk = "^1.21.0"

[tool.poetry.group.prod.dependencies]
# Security
pyjwt = "^2.8.0"
cryptography = "^41.0.7"
# Production server
gunicorn = "^21.2.0"

[tool.poetry.group.test.dependencies]
# Testing Framework
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
factory-boy = "^3.3.0"
# Mocking
faker = "^19.6.1"
freezegun = "^1.2.2"

# Tool configurations
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.venv
  | _build
  | build
  | dist
  | tests/unit
  | tests/helpers
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["cerverus"]
skip_glob = ["tests/unit/*", "tests/helpers/*"]

[tool.pylint.messages_control]
disable = [
    "C0114", # missing-module-docstring
    "C0116", # missing-function-docstring
    "R0903", # too-few-public-methods
    "W0613", # unused-argument
]

[tool.pylint.format]
max-line-length = 88

[tool.pytest.ini_options]
testpaths = ["tests", "api/tests", "src/tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=src --cov-report=xml --cov-report=term-missing --verbose"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.backend"
